/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <behaviors/unicode.dtsi>
#include <behaviors/num_word.dtsi>
#include <zmk-helpers/helper.h>
#include <zmk-helpers/key-labels/42.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define GALLIUM 1
#define NAV 2
#define SYM 3
#define NUM 4
#define SYS 5

#define XXX &none
#define ___ &trans

// Initial system for the unicode behavior
&uc { default-mode = <UC_MODE_LINUX>; };

// Home row mods
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
  ZMK_HOLD_TAP(NAME,                           \
               bindings = <HOLD>, <TAP>;       \
               flavor = "tap-preferred";       \
               tapping-term-ms = <280>;        \
               quick-tap-ms = <175>;           \
               require-prior-idle-ms = <150>;  \
               hold-trigger-on-release;        \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs

ZMK_HOLD_TAP(mo_kp,
             bindings = <&mo>, <&kp>;
             flavor = "tap-preferred";
             tapping-term-ms = <280>;
             quick-tap-ms = <175>;
             require-prior-idle-ms = <150>;
             hold-trigger-on-release;)

// Define mod-morph with a *single* mod trigger for less repetition
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2)       \
  ZMK_MOD_MORPH(NAME, mods = <(MOD_L##MOD | MOD_R##MOD)>; \
                bindings = <BINDING1>, <BINDING2>;)

// Tap: comma | Shift + tap: semicolon | Ctrl + shift + tap: <
SIMPLE_MORPH(comma_morph, SFT, &kp COMMA, &comma_inner_morph)
SIMPLE_MORPH(comma_inner_morph, CTL, &kp SEMICOLON, &kp LESS_THAN)

// Tap: backspace | Shft + tap: delete | Hold: sym layer
SIMPLE_MORPH(bs_del, SFT, &kp BSPC, &kp DEL)
ZMK_HOLD_TAP(mo_bs,
             bindings = <&mo>, <&bs_del>;
             flavor = "tap-preferred";
             tapping-term-ms = <280>;
             quick-tap-ms = <250>;
             require-prior-idle-ms = <150>;
             hold-trigger-on-release;)

// Base layer
ZMK_LAYER(Base,
     // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          &kp TAB        &kp Q          &kp W          &kp E          &kp R          &kp T              &kp Y          &kp U          &kp I          &kp O          &kp P          &kp BACKSLASH
     // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &kp ESCAPE     &hml LGUI A    &hml LALT S    &hml LCTRL D   &hml LSHFT F   &kp G              &kp H          &hmr RSHFT J   &hmr RCTRL K   &hmr RALT L    &hmr RGUI SEMI &kp SINGLE_QUOTE
     // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          &tog 1         &kp Z          &kp X          &kp C          &kp V          &kp B              &kp N          &kp M          &kp COMMA      &kp DOT        &kp FSLH       &sl 5
     // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
                                                       &num_word 4    &mo_bs 3 0     &mo_kp 4 TAB       &kp RETURN     &mo_kp 2 SPACE &caps_word
     //                                              ╰──────────────┴──────────────┴──────────────╯   ╰──────────────┴──────────────┴──────────────╯
)

// Gallium layer
ZMK_LAYER(Gallium,
     // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          ___            &kp B          &kp L          &kp D          &kp C          &kp V              &kp J          &kp Y          &kp O          &kp U          &comma_morph   ___
     // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          ___            &hml LGUI N    &hml LALT R    &hml LCTRL T   &hml LSHFT S   &kp G              &kp P          &hmr RSHFT H   &hmr RCTRL A   &hmr RALT E    &hmr I         ___
     // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          ___            &kp X          &kp Q          &kp M          &kp W          &kp Z              &kp K          &kp F          &kp APOS       &kp SEMI       &kp DOT        ___
     // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
                                                       ___            ___            ___                ___            ___            ___
     //                                              ╰──────────────┴──────────────┴──────────────╯   ╰──────────────┴──────────────┴──────────────╯
)

// Navigation layer
ZMK_LAYER(Nav,
     // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
          XXX            XXX            XXX            XXX            XXX            XXX                XXX            XXX            &kp PAGE_UP    XXX            XXX            XXX
     // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          XXX            &kp LGUI       &kp LALT       &kp LCTRL      &kp LSHFT      XXX                &kp LEFT       &kp UP         &kp DOWN       &kp RIGHT      XXX            XXX
     // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
          XXX            XXX            XXX            XXX            XXX            XXX                XXX            XXX            &kp PAGE_DOWN  XXX            XXX            XXX
     // ╰──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
                                                       ___            ___            ___                ___            ___            ___
     //                                              ╰──────────────┴──────────────┴──────────────╯   ╰──────────────┴──────────────┴──────────────╯
)

/ {
    keymap {
        compatible = "zmk,keymap";

        symbol_layer {
            display-name = "Sym";
            bindings = <
&trans  &kp GRAVE                    &kp LESS_THAN             &kp GREATER_THAN           &kp MINUS                &kp PIPE         &kp CARET    &kp LEFT_BRACE                       &kp RIGHT_BRACE                         &kp DOLLAR                  &kp UNDERSCORE                  &trans
&trans  &hml LEFT_GUI EXCLAMATION    &hml LEFT_ALT ASTERISK    &hml LEFT_CONTROL SLASH    &hml LEFT_SHIFT EQUAL    &kp AMPERSAND    &kp HASH     &hmr RIGHT_SHIFT LEFT_PARENTHESIS    &hmr RIGHT_CONTROL RIGHT_PARENTHESIS    &hmr RIGHT_ALT SEMICOLON    &hmr RIGHT_GUI DOUBLE_QUOTES  &trans
&trans  &kp TILDE                    &kp PLUS                  &kp LEFT_BRACKET           &kp RIGHT_BRACKET        &kp PERCENT      &kp AT_SIGN  &kp COLON                            &kp COMMA                               &kp PERIOD                  &kp SQT                         &trans
                                                               &trans                     &trans                   &trans           &trans       &trans                               &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &uc UC_CURR_EURO  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp N1  &kp N2  &kp N3  &trans            &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Num";
        };

        sys_layer {
            bindings = <
&kp F1      &kp F2           &kp F3           &kp F4                 &kp F5        &kp F6          &kp F7       &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2           &bt BT_SEL 3  &bt BT_SEL 4    &sys_reset   &trans  &trans  &trans   &trans   &trans
&trans      &uc UC_SET_LINUX &uc UC_SET_MACOS &uc UC_SET_WIN_COMPOSE &trans        &trans          &bootloader  &trans  &trans  &trans   &trans   &trans
                                              &trans                 &trans        &trans          &trans       &trans  &trans
            >;

            label = "Sys";
        };
    };
};
